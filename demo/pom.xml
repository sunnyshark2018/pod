<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.16.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
                <jmh.version>1.23</jmh.version>
                <java.version>1.8</java.version>
                <core.version>2.0.1</core.version>
                <log4j2.version>2.1</log4j2.version>
                <jasypt.version>1.14</jasypt.version>
                <hutool.version>5.1.0</hutool.version>
                <fastjson.version>1.2.70</fastjson.version>
                <disruptor.version>3.4.1</disruptor.version>
                <maven.compiler.source>1.8</maven.compiler.source>
                <maven.compiler.target>1.8</maven.compiler.target>
                <docker.host>unix:///var/run/docker.sock</docker.host>
                <docker.image.prefix>sunnyshark</docker.image.prefix>
                <spring-boot.version>2.1.16.RELEASE</spring-boot.version>
                <spring-platform.version>Cairo-SR3</spring-platform.version>
                <spring.social.version>1.1.6.RELEASE</spring.social.version>
                <spring-security.version>5.1.1.RELEASE</spring-security.version>
                <security-oauth2.version>2.3.6.RELEASE</security-oauth2.version>
                <commons-collections4.version>4.1</commons-collections4.version>
                <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
                <hibernate-validator.verion>6.0.18.Final</hibernate-validator.verion>
                <flowable.version>6.4.1</flowable.version>
                <spring-cloud-dependencies.version>Greenwich.SR6</spring-cloud-dependencies.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
                        <version>${spring-boot.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-web</artifactId>
                </dependency>

                <!-- 选用eureka时打开-->
                <dependency>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                </dependency>
	</dependencies>

        <dependencyManagement>
              <dependencies>
                  <dependency>
                       <groupId>org.springframework.cloud</groupId>
                       <artifactId>spring-cloud-dependencies</artifactId>
                       <version>Greenwich.SR2</version>
                       <type>pom</type>
                       <scope>import</scope>
                  </dependency>
              </dependencies>
        </dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

        	        <!-- 首先加入pom ${docker.image.prefix} ： 这个是你的dockerhub注册上面的名字 gitgeek 这个是我注册的 
         		${project.artifactId} ： 项目的名称 dockerDirectory ： dockerfile的文件路径 -->

  			<plugin>
   			   <groupId>com.spotify</groupId>
   			   <artifactId>docker-maven-plugin</artifactId>
   			   <version>0.4.13</version>
   			   <configuration>
    			    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
    			    <dockerDirectory>src/main/docker</dockerDirectory>
   			     <!-- docker远程服务器地址 -->
   			     <dockerHost>${docker.host}</dockerHost>
   			     <resources>
   			       <resource>
   			         <targetPath>/</targetPath>
    			        <directory>${project.build.directory}</directory>
    			        <include>${project.build.finalName}.jar</include>
    			      </resource>
    			    </resources>
    			  </configuration>
   			 </plugin>
		</plugins>
	</build>


        <repositories>
                <repository>
                        <id>aliyun-repos</id>
                        <url>https://maven.aliyun.com/repository/public</url>
                        <snapshots>
                                <enabled>false</enabled>
                        </snapshots>
                </repository>
        </repositories>


</project>
